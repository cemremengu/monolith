version: "3"

vars:
  PACKAGE: monolith
  VERSION:
    sh: git describe --tags 2> /dev/null || echo "v0.0.0"
  COMMIT:
    sh: git rev-parse --short HEAD 2> /dev/null || echo "unknown"
  DATE_BUILT: '{{now | date "2006-01-02T15:04:05Z"}}'
  GO_BUILD_CMD: CGO_ENABLED=0 go build {{.GO_FLAGS}} -tags "{{.TAGS}}" -ldflags "{{.LD_FLAGS}} -X {{.PACKAGE}}.Version={{.VERSION}} -X {{.PACKAGE}}.Commit={{.COMMIT}} -X {{.PACKAGE}}.DateBuilt={{.DATE_BUILT}}"
  WEB_BUILD_CMD: npm run build

tasks:
  run:server:
    cmds:
      - wgo run ./cmd/monolith
  run:web:
    cmds:
      - cd web && npm run dev
  test:
    cmds:
      - go test -v ./...
  build:web:
    dir: web
    cmds:
      - "{{.WEB_BUILD_CMD}}"
  build:server:
    cmds:
      - "{{.GO_BUILD_CMD}} ./cmd/monolith"
  build:win:
    cmds:
      - task: build:web
      - task: build:server
    env:
      GOOS: windows
      GOARCH: amd64
  build:linux:
    cmds:
      - task: build:web
      - "{{.GO_BUILD_CMD}} ./cmd/monolith"
    env:
      GOOS: linux
      GOARCH: amd64
  build:docker:
    cmds:
      - docker build -t monolith:latest .
  update:
    cmds:
      - go get -u ./...
      - go mod tidy
  lint:
    cmds:
      - golangci-lint fmt
      - golangci-lint run
      - cd web && npm run lint:fix
  install-tools:
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install github.com/wgo/wgo@latest
